/*

Copyright 2019, (C) Sylvain Lefebvre and contributors
List contributors with: git shortlog -n -s -- <filename>

MIT license

Permission is hereby granted, free of charge, to any person obtaining a copy of
this software and associated documentation files (the "Software"), to deal in
the Software without restriction, including without limitation the rights to
use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
the Software, and to permit persons to whom the Software is furnished to do so,
subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

(header_2_M)

*/
// ----------------------- memory_ports.si -----------
// @sylefeb - Silice standard library
// Memory port interfaces
// 2020-09-03

// single port BRAM

interface bram_port {
  output(!) addr,
  output(!) wenable,
  input     rdata,
  output(!) wdata,
}

// single port BROM

interface brom_port {
  output(!) addr,
  input     rdata,
}

// dual port BRAM

interface dualport_bram_port0 {
  output(!) addr0,
  output(!) wenable0,
  input     rdata0,
  output(!) wdata0,
}

interface dualport_bram_port1 {
  output(!) addr1,
  output(!) wenable1,
  input     rdata1,
  output(!) wdata1,
}

interface dualport_bram_ports {
  output(!) addr0,
  output(!) wenable0,
  input     rdata0,
  output(!) wdata0,
  output(!) addr1,
  output(!) wenable1,
  input     rdata1,
  output(!) wdata1,
}

// simple dual port BRAM

interface simple_dualport_bram_ports {
  output(!) addr0,
  input     rdata0,
  output(!) addr1,
  output(!) wenable1,
  output(!) wdata1,
}

interface simple_dualport_bram_port0 {
  output(!) addr0,
  input     rdata0,
}

interface simple_dualport_bram_port1 {
  output(!) addr1,
  output(!) wenable1,
  output(!) wdata1,
}

// ----------------------- end of memory_ports.si ----
